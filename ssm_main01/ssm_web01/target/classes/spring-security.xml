<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

   <!-- 放行的资源-->
    <security:http pattern="/css/**" security="none" />
    <security:http pattern="/img/**" security="none" />
    <security:http pattern="/plugins/**" security="none" />
    <security:http pattern="/login.jsp" security="none" />
    <security:http pattern="/failer.jsp" security="none" />
    <security:http pattern="/favicon.ico" security="none" />

   <!--auto-config true表示自动生成登陆页面；如果有配置form-login就以配置的登陆页面为主-->
   <security:http auto-config="true" use-expressions="true" >
   <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
         <security:form-login
                 login-page="/login.jsp"
                 login-processing-url="/login"
                 username-parameter="username"
                 password-parameter="password"
                 default-target-url="/index.jsp"
                 authentication-failure-url="/failer.jsp"
         />
      <!--退出的配置-->
      <security:logout
              logout-url="/logout"
              logout-success-url="/login.jsp"
              invalidate-session="true"/>

       <security:access-denied-handler error-page="/403.jsp" />
      <!--关闭跨域请求的校验-->
      <security:csrf disabled="true"/>
   </security:http>


   <!--配置登陆认证的账号密码（先写死）-->
   <security:authentication-manager>
      <!--user-service-ref 配置引用容器中的service对象,登陆认证时候调用。-->
      <!--要求：service一定要实现UserDetailsService接口-->
      <security:authentication-provider user-service-ref="userService">
          <security:password-encoder ref="passwordEncoder" />
      </security:authentication-provider>
   </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>
<!--<security:global-method-security jsr250-annotations="enabled" />-->
   <!-- <security:global-method-security secured-annotations="enabled" />-->
    <security:global-method-security pre-post-annotations="enabled" />
</beans>